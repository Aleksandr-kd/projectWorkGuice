name: Run UI Tests with Allure

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    services:
      selenoid:
        image: aerokube/selenoid:latest-release
        ports:
          - 4444:4444
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        options: >-
          --privileged
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:4444/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Start Selenoid
        run: docker-compose up -d

      - name: Wait for Selenoid to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:4444/status | grep -q "ready"; then
              echo "Selenoid is ready"
              break
            fi
            echo "Waiting for Selenoid..."
            sleep 3
          done
      - name: Install Allure CLI manually
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.34.0/allure-2.34.0.tgz
          tar -zxvf allure-2.34.0.tgz
          sudo mv allure-2.34.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Build project and run tests
        run: |
          mvn clean test \
            -Dgroups=test \
            -Dbrowser=firefox \
            -Dmode=fullscreen \
            -Dremote.url=http://localhost:4444/wd/hub

      - name: Generate Allure Report
        run: |
          allure generate target/allure-results --clean -o allure-report

      - name: Upload Allure HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report